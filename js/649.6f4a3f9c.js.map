{"version":3,"file":"js/649.6f4a3f9c.js","mappings":"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","sources":["webpack://admin.motosusadas.uy/./src/views/components/Heading.vue?9e21","webpack://admin.motosusadas.uy/./src/views/components/Heading.vue","webpack://admin.motosusadas.uy/./src/views/components/Heading.vue?44a4","webpack://admin.motosusadas.uy/./src/views/components/SplitView.vue","webpack://admin.motosusadas.uy/./src/views/components/SplitView.vue?7fee","webpack://admin.motosusadas.uy/../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx","webpack://admin.motosusadas.uy/../../../src/components/VSelectionControl/VSelectionControl.tsx","webpack://admin.motosusadas.uy/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://admin.motosusadas.uy/../../../src/components/VMenu/VMenu.tsx","webpack://admin.motosusadas.uy/../../../src/components/VVirtualScroll/VVirtualScrollItem.tsx","webpack://admin.motosusadas.uy/../../src/composables/virtual.ts","webpack://admin.motosusadas.uy/../../../src/components/VVirtualScroll/VVirtualScroll.tsx","webpack://admin.motosusadas.uy/../../../src/components/VSelect/useScrolling.ts","webpack://admin.motosusadas.uy/../../../src/components/VSelect/VSelect.tsx"],"sourcesContent":["import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ab045b7\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"heading-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_v_col = _resolveComponent(\"v-col\")!\n  const _component_v_icon = _resolveComponent(\"v-icon\")!\n  const _component_v_btn = _resolveComponent(\"v-btn\")!\n  const _component_v_row = _resolveComponent(\"v-row\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_v_row, { class: \"mt-5\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_v_col, {\n          cols: \"8\",\n          sm: \"4\",\n          class: \"heading-title\"\n        }, {\n          default: _withCtx(() => [\n            _renderSlot(_ctx.$slots, \"title\", {}, () => [\n              _createElementVNode(\"h2\", null, _toDisplayString(_ctx.$t(\"dashboard\")), 1),\n              _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"dashboard-welcome\")), 1)\n            ], true)\n          ]),\n          _: 3\n        }),\n        _createVNode(_component_v_col, {\n          cols: \"4\",\n          sm: \"8\",\n          class: \"heading-actions\"\n        }, {\n          default: _withCtx(() => [\n            _renderSlot(_ctx.$slots, \"actions\", {}, undefined, true),\n            (!$setup.lgAndUp)\n              ? (_openBlock(), _createBlock(_component_v_btn, {\n                  key: 0,\n                  text: \"\",\n                  dark: \"\",\n                  class: \"action-btn\",\n                  onClick: $setup.toggleDrawer\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_v_icon, { color: \"#2d6283\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"mdi-menu\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 3\n        })\n      ]),\n      _: 3\n    })\n  ]))\n}","<template>\n  <div class=\"heading-container\">\n    <v-row class=\"mt-5\">\n      <v-col cols=\"8\" sm=\"4\" class=\"heading-title\">\n        <slot name=\"title\">\n          <h2>{{ $t(\"dashboard\") }}</h2>\n          <p>{{ $t(\"dashboard-welcome\") }}</p>\n        </slot>\n      </v-col>\n      <v-col cols=\"4\" sm=\"8\" class=\"heading-actions\">\n        <slot name=\"actions\"> </slot>\n        <v-btn v-if=\"!lgAndUp\" text dark class=\"action-btn\" @click=\"toggleDrawer\">\n          <v-icon color=\"#2d6283\">mdi-menu</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useStore } from 'vuex';\nimport { useDisplay } from 'vuetify'\n\nexport default {\n  setup() {\n    const { lgAndUp } = useDisplay()\n    const store = useStore();\n\n    const toggleDrawer = () => {\n      store.commit(\"toggleDrawer\");\n    };\n\n    return {\n      lgAndUp,\n      toggleDrawer,\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.heading-container {\n  width: 100%;\n  padding: 0;\n  margin: 0;\n}\n\n.heading-title {\n  padding-left: 0 !important;\n  max-width: 26% !important;\n}\n\n.v-row {\n  margin: 0 !important;\n}\n\n.v-col {\n  padding: 0 !important;\n}\n\n.heading-actions {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n\n.action-btn {\n  margin-left: 8px !important;\n}\n\n@media (max-width: 600px) {\n  .heading-title {\n    max-width: 60% !important;\n  }\n\n  .heading-actions {\n    display: flex;\n    justify-content: flex-end;\n    min-width: 40% !important;\n  }\n}\n</style>\n","import { render } from \"./Heading.vue?vue&type=template&id=6ab045b7&scoped=true&ts=true\"\nimport script from \"./Heading.vue?vue&type=script&lang=ts\"\nexport * from \"./Heading.vue?vue&type=script&lang=ts\"\n\nimport \"./Heading.vue?vue&type=style&index=0&id=6ab045b7&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ab045b7\"]])\n\nexport default __exports__","<template>\n  <div :class=\"`split-content ${hideAuxiliar ? 'split-content__single' : ''}`\">\n    <div v-if=\"!hideAuxiliar\">\n      <slot name=\"auxiliar\"/>\n    </div>\n    <div>\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\n\nexport default {\n  props: {\n    hideAuxiliar: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    const data = ref({});\n\n\n    onMounted(() => { });\n\n    return {\n      data,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.split-content {\n  display: flex;\n  min-height: 80vh;\n\n  &:not(.split-content__single) {\n    >div:first-child {\n      flex: 0 0 330px;\n      border-right: 1px solid #e6e6e6;\n      padding-right: 24px;\n      min-width: 250px;\n      max-width: 380px;\n      z-index: 2;\n    }\n\n    >div:nth-child(2) {\n      padding-left: 24px;\n      flex: 1;\n      scroll-behavior: smooth;\n      width: 100%;\n      position: relative;\n      z-index: 1;\n    }\n  }\n\n  &.split-content__single {\n    justify-content: center;\n\n    >div {\n      max-width: 400px;\n    }\n  }\n}\n\n@media screen and (max-width: 900px) {\n  .split-content {\n    &:not(.split-content__single) {\n      flex-direction: column;\n\n      >div:first-child {\n        flex: none;\n        width: 100%;\n        border-right: none;\n        padding-right: 0;\n        max-width: 100%;\n        min-width: 0;\n        border-bottom: 1px solid #e6e6e6;\n        padding-bottom: 20px;\n        margin-bottom: 16px;\n      }\n\n      >div:nth-child(2) {\n        flex: none;\n        width: 100%;\n        padding-left: 0;\n        margin-top: 20px;\n        overflow-x: auto;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./SplitView.vue?vue&type=template&id=7d834eee&scoped=true\"\nimport script from \"./SplitView.vue?vue&type=script&lang=js\"\nexport * from \"./SplitView.vue?vue&type=script&lang=js\"\n\nimport \"./SplitView.vue?vue&type=style&index=0&id=7d834eee&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d834eee\"]])\n\nexport default __exports__","// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue'\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: Boolean,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps(),\n}, 'SelectionControlGroup')\n\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl',\n  }),\n}, 'VSelectionControlGroup')\n\nexport const VSelectionControlGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: { default: never },\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControlGroup',\n\n  props: makeVSelectionControlGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n          props.class,\n        ]}\n        style={ props.style }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n","// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject, nextTick, ref, shallowRef } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  matchesSelector,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, VNode, WritableComputedRef } from 'vue'\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp, GenericProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n  inputNode: VNode\n  icon: IconValue | undefined\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = {\n  default: {\n    backgroundColorClasses: Ref<string[]>\n    backgroundColorStyles: Ref<CSSProperties>\n  }\n  label: { label: string | undefined, props: Record<string, unknown> }\n  input: SelectionControlSlot\n}\n\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps(),\n}, 'VSelectionControl')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeVSelectionControlProps>> & {\n    'onUpdate:modelValue': EventProp | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? wrapInArray(val).some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    if (props.error || props.disabled) return undefined\n\n    return model.value ? props.color : props.baseColor\n  }))\n  const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : undefined\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeVSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const isFocused = shallowRef(false)\n    const isFocusVisible = shallowRef(false)\n    const input = ref<HTMLInputElement>()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isInteractive = computed(() => !props.disabled && !props.readonly)\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      if (!isInteractive.value) return\n\n      isFocused.value = true\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') !== false) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onClickLabel (e: Event) {\n      e.stopPropagation()\n    }\n\n    function onInput (e: Event) {\n      if (!isInteractive.value) return\n\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      const inputNode = (\n        <input\n          ref={ input }\n          checked={ model.value }\n          disabled={ !!props.disabled }\n          id={ id.value }\n          onBlur={ onBlur }\n          onFocus={ onFocus }\n          onInput={ onInput }\n          aria-disabled={ !!props.disabled }\n          type={ props.type }\n          value={ trueValue.value }\n          name={ props.name }\n          aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n          { ...inputAttrs }\n        />\n      )\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          style={ props.style }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.({\n              backgroundColorClasses,\n              backgroundColorStyles,\n            })}\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                backgroundColorClasses,\n                backgroundColorStyles,\n                inputNode,\n                icon: icon.value,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } satisfies SelectionControlSlot) ?? (\n                <>\n                  { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n                  { inputNode }\n                </>\n              )}\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } onClick={ onClickLabel }>\n              { label }\n            </VLabel>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n","// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, mergeProps, nextTick, provide, ref, shallowRef, watch } from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  getUid,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition as Component },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(0)\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren.value\n      },\n      unregister () {\n        --openChildren.value\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value &&\n            (e == null || (e && !isClickInsideElement(e, overlay.value!.contentEl!)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        document.addEventListener('focusin', onFocusIn, { once: true })\n      } else {\n        parent?.unregister()\n        document.removeEventListener('focusin', onFocusIn)\n      }\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab') {\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          focusChild(el, 'prev')\n        }\n      } else if (['ArrowDown', 'ArrowUp'].includes(e.key)) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n","// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n","// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.index }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n","// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return { onListScroll, onListKeydown }\n}\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => s === item))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      function checkPrintable (e: KeyboardEvent) {\n        const isPrintableChar = e.key.length === 1\n        const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey\n        return isPrintableChar && noModifier\n      }\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n      }\n    }\n    function select (item: ListItem, add = true) {\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        add = index === -1\n        if (add) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = add ? [item] : []\n        menu.value = false\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(displayItems, (val, oldVal) => {\n      if (!isFocused.value) return\n\n      if (!val.length && props.hideNoData) {\n        menu.value = false\n      }\n\n      if (!oldVal.length && val.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"names":["_hoisted_1","class","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_createVNode","_component_v_row","default","_withCtx","_component_v_col","cols","sm","_renderSlot","$slots","_createElementVNode","_toDisplayString","$t","_","undefined","lgAndUp","_createCommentVNode","_createBlock","_component_v_btn","key","text","dark","onClick","toggleDrawer","_component_v_icon","color","_createTextVNode","setup","useDisplay","store","useStore","commit","__exports__","_normalizeClass","hideAuxiliar","props","type","Boolean","data","ref","onMounted","VSelectionControlGroupSymbol","Symbol","for","makeSelectionControlGroupProps","propsFactory","String","disabled","defaultsTarget","error","id","inline","falseIcon","IconValue","trueIcon","ripple","multiple","name","readonly","modelValue","valueComparator","Function","deepEqual","makeComponentProps","makeDensityProps","makeThemeProps","makeVSelectionControlGroupProps","genericComponent","emits","value","_ref","slots","useProxiedModel","uid","getUid","computed","updateHandlers","Set","provide","forceUpdate","forEach","fn","onForceUpdate","cb","add","onScopeDispose","delete","provideDefaults","toRef","density","Array","isArray","useRender","style","makeVSelectionControlProps","label","baseColor","trueValue","falseValue","useSelectionControl","group","inject","densityClasses","useDensity","isMultiple","model","get","val","wrapInArray","some","v","set","currentValue","newVal","filter","item","textColorClasses","textColorStyles","useTextColor","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","icon","VSelectionControl","directives","Ripple","inheritAttrs","attrs","isFocused","shallowRef","isFocusVisible","input","isInteractive","onFocus","e","matchesSelector","target","onBlur","onClickLabel","stopPropagation","onInput","nextTick","checked","rootAttrs","inputAttrs","filterInputAttrs","inputNode","_mergeProps","_withDirectives","_Fragment","VIcon","_resolveDirective","VLabel","makeVCheckboxBtnProps","indeterminate","indeterminateIcon","VCheckboxBtn","onChange","controlProps","omit","filterProps","$event","makeVMenuProps","makeVOverlayProps","closeDelay","closeOnContentClick","locationStrategy","openDelay","scrim","scrollStrategy","transition","component","VDialogTransition","VMenu","isActive","scopeId","useScopeId","overlay","parent","VMenuSymbol","openChildren","async","onFocusIn","before","relatedTarget","after","contentEl","globalTop","document","includes","contains","focusable","focusableChildren","focus","onClickOutside","closeParents","onKeydown","nextElement","getNextElement","shiftKey","el","tabIndex","activatorEl","onActivatorKeydown","preventDefault","focusChild","setTimeout","register","unregister","isClickInsideElement","watch","addEventListener","once","removeEventListener","activatorProps","mergeProps","overlayProps","VOverlay","activator","_len","arguments","length","args","_key","VDefaultsProvider","forwardRefs","ΨopenChildren","makeVVirtualScrollItemProps","renderless","VVirtualScrollItem","height","emit","resizeRef","contentRect","useResizeObserver","itemRef","UP","DOWN","BUFFER_PX","makeVirtualProps","itemHeight","Number","useVirtual","items","display","watchEffect","parseFloat","first","last","Math","ceil","parseInt","paddingTop","paddingBottom","containerRef","markerRef","markerOffset","viewportHeight","documentElement","hasInitialRender","sizes","from","offsets","updateTime","targetScrollIndex","getSize","index","updateOffsets","debounce","start","performance","now","i","max","unwatch","offsetTop","immediate","calculateVisibleItems","IN_BROWSER","window","requestAnimationFrame","scrollToIndex","handleItemResize","prevHeight","prevMinHeight","min","calculateOffset","clamp","calculateIndex","scrollTop","binaryClosest","clear","lastScrollTop","scrollVelocity","lastScrollTime","handleScroll","scrollTime","scrollDeltaT","sign","handleScrollend","oldVal","raf","cancelAnimationFrame","_calculateVisibleItems","direction","startPx","endPx","end","topOverflow","bottomOverflow","bufferOverflow","offset","computedItems","slice","map","raw","deep","arr","high","low","mid","makeVVirtualScrollProps","makeDimensionProps","VVirtualScroll","vm","getCurrentInstance","dimensionStyles","useDimension","useToggleScope","handleListeners","method","passive","getScrollParent","vnode","children","slotProps","convertToUnit","useScrolling","listRef","textFieldRef","isScrolling","scrollTimeout","onListScroll","finishScrolling","Promise","resolve","stop","onListKeydown","$el","scrollTo","top","scrollHeight","behavior","querySelectorAll","getBoundingClientRect","child","bottom","reverse","makeSelectProps","chips","closableChips","closeText","openText","eager","hideNoData","hideSelected","listProps","Object","menu","menuIcon","menuProps","noDataText","openOnClear","itemColor","makeItemsProps","itemChildren","makeVSelectProps","makeVTextFieldProps","role","makeTransitionProps","VSelect","focused","ue","t","useLocale","vTextFieldRef","vMenuRef","vVirtualScrollRef","_menu","transformIn","transformOut","useItems","transformed","counterValue","form","useForm","selectedValues","selection","keyboardLookupLastTime","keyboardLookupPrefix","displayItems","s","menuDisabled","isReadonly","computedMenuProps","onClear","onMousedownControl","KEYBOARD_LOOKUP_THRESHOLD","checkPrintable","isPrintableChar","noModifier","ctrlKey","metaKey","altKey","toLowerCase","find","title","startsWith","select","findIndex","splice","onAfterLeave","onFocusin","onModelUpdate","hasChips","chip","hasList","isDirty","textFieldProps","VTextField","placeholder","persistentPlaceholder","join","externalValue","VList","VListItem","_ref2","itemProps","prepend","_ref3","isSelected","prependAvatar","VAvatar","prependIcon","onChipClose","onMousedown","hasSlot","slotContent","ensureValidVNode","VChip","closable","size"],"sourceRoot":""}